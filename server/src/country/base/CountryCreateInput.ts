/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsInt } from "class-validator";
import { InstituteCreateNestedManyWithoutCountriesInput } from "./InstituteCreateNestedManyWithoutCountriesInput";
import { Type } from "class-transformer";
import { InstituteTypeCreateNestedManyWithoutCountriesInput } from "./InstituteTypeCreateNestedManyWithoutCountriesInput";
@InputType()
class CountryCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  countryCode?: string | null;

  @ApiProperty({
    required: false,
    type: () => InstituteCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => InstituteCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => InstituteCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  institutes?: InstituteCreateNestedManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: () => InstituteTypeCreateNestedManyWithoutCountriesInput,
  })
  @ValidateNested()
  @Type(() => InstituteTypeCreateNestedManyWithoutCountriesInput)
  @IsOptional()
  @Field(() => InstituteTypeCreateNestedManyWithoutCountriesInput, {
    nullable: true,
  })
  instituteTypes?: InstituteTypeCreateNestedManyWithoutCountriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  phoneCode?: number | null;
}
export { CountryCreateInput };
