/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { GraduationType } from "../../graduationType/base/GraduationType";
import { Institute } from "../../institute/base/Institute";
import { MArketProfile } from "../../mArketProfile/base/MArketProfile";
import { UserGroup } from "../../userGroup/base/UserGroup";
@ObjectType()
class Group {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => GraduationType,
  })
  @ValidateNested()
  @Type(() => GraduationType)
  @IsOptional()
  graduationType?: GraduationType | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Institute,
  })
  @ValidateNested()
  @Type(() => Institute)
  @IsOptional()
  institute?: Institute | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => MArketProfile,
  })
  @ValidateNested()
  @Type(() => MArketProfile)
  @IsOptional()
  marketProfile?: MArketProfile | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [UserGroup],
  })
  @ValidateNested()
  @Type(() => UserGroup)
  @IsOptional()
  userGroups?: Array<UserGroup>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  year!: number;
}
export { Group };
